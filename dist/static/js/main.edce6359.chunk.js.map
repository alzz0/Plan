{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","state","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","className","NavLink","to","onClick","profile","initials","SignedOutLinks","console","log","firebase","links","uid","layout_SignedInLinks","layout_SignedOutLinks","Link","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","_ref","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","projects_ProjectSummary","Dashboard","this","_this$props","projects_ProjectList","dashboard_Notifications","Redirect","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","_this","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","getState","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","authorId","add","objectSpread","Date","App","BrowserRouter","layout_Navbar","Switch","Route","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","arguments","length","undefined","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fBconfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.edce6359.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { signOut } from \"../../store/actions/authActions\";\nconst SignedInLinks = props => {\n\n  return (\n    \n    <ul className=\"right\">\n      <li>\n        <NavLink to=\"/createproject\">New Projects</NavLink>\n      </li>\n      <li>\n        <a onClick={props.signOut}>Log Out</a>\n      </li>\n      <li>\n        <NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">\n          {props.profile.initials}\n        </NavLink>\n      </li>\n    </ul>\n  );\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    signOut: () => dispatch(signOut())\n  };\n};\nexport default connect(\n  null,\n  mapDispatchToProps\n)(SignedInLinks);\n","export const signIn = credentials => {\n  return (dispatch, getState, { getFirebase }) => {\n    const firebase = getFirebase();\n    firebase.auth().signInWithEmailAndPassword(\n      credentials.email,\n      credentials.password\n    ).then(()=>{\n           dispatch({type:\"LOGIN_SUCCESS\"})\n    }).catch((err)=>{\n        dispatch({type:\"LOGIN_ERROR\",err})\n    })\n  };\n};\n\n\nexport const signOut=()=>{\n    return (dispatch,state,{getFirebase})=>{\n        const firebase= getFirebase()\n        firebase.auth().signOut().then(()=>{\n            dispatch({type:\"SIGNOUT_SUCCESS\"})\n        })\n    }\n}\n\nexport const signUp=newUser=>{\n    return(dispatch,getState,{getFirebase,getFirestore})=>{\n        const firebase = getFirebase();\n    const firestore = getFirestore();\n       \n      \n        firebase.auth().createUserWithEmailAndPassword(\n        newUser.email,\n            newUser.password\n        ).then((resp)=>{\n          return firestore.collection(\"users\").doc(resp.user.uid).set({\n              firstName:newUser.firstName,\n              lastName:newUser.lastName,\n              initials:newUser.firstName[0]+newUser.lastName[0]\n          })\n        }).then(()=>{\n            dispatch({type:\"SIGNUP_SUCCESS\"})\n        }).catch(err=>{\n            dispatch({type:\"SIGNUP_ERROR\",err})\n        })\n        \n        \n        \n    }\n}","import React from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\nconst SignedOutLinks = () => {\n  return (\n    <ul className=\"right\">\n      <li>\n        <NavLink to=\"/signin\">Login</NavLink>\n      </li>\n      <li>\n        <NavLink to=\"/signup\">Sign Up</NavLink>\n      </li>\n    </ul>\n  );\n};\n\nexport default SignedOutLinks;\n","import React from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport SignedInLinks from \"./SignedInLinks\";\nimport SignedOutLinks from \"./SignedOutLinks\";\nimport { connect } from \"react-redux\";\nconst Navbar = props => {\n  const { auth,profile } = props;\n  console.log(auth);\n\n  const links = auth.uid ? <SignedInLinks profile={profile}/> : <SignedOutLinks />;\n  return (\n    <nav className=\"nav-wrapper grey darken-3\">\n      <div className=\"container\">\n        <Link to=\"/\" className=\"brand-logo\">\n          Plan\n        </Link>\n        {links}\n      </div>\n    </nav>\n  );\n};\nconst mapStateToProps = state => {\n  console.log(state)\n  return {\n    auth: state.firebase.auth,\n        profile:state.firebase.profile\n  };\n};\nexport default connect(mapStateToProps)(Navbar);\n","import React from \"react\";\nimport moment from \"moment\";\n\nconst Notifications = props => {\n  const { notifications } = props;\n  return (\n    <div className=\"section\">\n      <div className=\"card z-depth-0\">\n        <div className=\"card-content\">\n          <span className=\"card-content\">Notifications</span>\n          <ul className=\"notifications\">\n            {notifications &&\n              notifications.map(item => {\n                return (\n                  <li key={item.id}>\n                    <span className=\"pink-text\"> {item.user} </span>\n                    <span>{item.content}</span>\n                    <div className=\"grey-text note-date\">\n                      {moment(item.time.toDate()).fromNow()}\n                    </div>\n                  </li>\n                );\n              })}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Notifications;\n","import React from \"react\";\nimport moment from \"moment\"\nconst ProjectSummary = ({ project }) => {\n  return (\n    <div className=\"card z-depth-0 project-summary\">\n      <div className=\"card-content grey-text text-darken-3\">\n        <span className=\"card-title\">{project.title}</span>\n        <p>\n          Posted by {project.authorFirstName} {project.authorLastName}\n        </p>\n        <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\n\n      </div>\n    </div>\n  );\n};\n\nexport default ProjectSummary;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport ProjectSummary from \"./ProjectSummary\";\nconst ProjectList = ({ projects }) => {\n  return (\n    <div className=\"project-list section\">\n      {projects &&\n        projects.map(project => {\n          return (\n            <Link to={\"/project/\" + project.id} key={project.id}>\n              <ProjectSummary project={project} />\n            </Link>\n          );\n        })}\n    </div>\n  );\n};\n\nexport default ProjectList;\n","import React, { Component } from \"react\";\nimport Notifications from \"./Notifications\";\nimport ProjectList from \"../projects/ProjectList\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\nimport { Redirect } from \"react-router-dom\";\nclass Dashboard extends Component {\n  render() {\n    console.log(this.props);\n    const { projects, auth, notifications } = this.props;\n\n    if (!auth.uid) return <Redirect to=\"/signin\" />;\n    return (\n      <div className=\"dashboard container\">\n        <div className=\"row\">\n          <div className=\"col s12 m6\">\n            <ProjectList projects={projects} />\n          </div>\n          <div className=\"col s12 m5 offset-m1\">\n            <Notifications notifications={notifications} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    projects: state.firestore.ordered.projects,\n    auth: state.firebase.auth,\n    notifications: state.firestore.ordered.notifications\n  };\n};\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    {\n      collection: \"projects\",\n      orderBy: [\"createdAt\", \"desc\"]\n    },\n    { collection: \"notifications\", limit: 3, orderBy: [\"time\", \"desc\"] }\n  ])\n)(Dashboard);\n","import React from \"react\";\nimport { compose } from \"redux\";\nimport {firestoreConnect} from \"react-redux-firebase\"\nimport {connect} from \"react-redux\"\nimport {Link} from \"react-router-dom\"\nimport {Redirect} from \"react-router-dom\"\nimport moment from \"moment\"\n\nconst projectDetails = props => {\n  const {project,auth}=props\n  if(!auth.uid)return <Redirect to =\"/signin\"/>\n  if(project){\n      return(\n      <div className=\"container section project-details\">\n      <div className=\"card z-depth-0\">\n        <div className=\"card-content\">\n          <span className=\"card-title\">{project.title}</span>\n          <p>{project.content}</p>\n        </div>\n        <div className=\"card-action grey lighten-4 grey-text\">\n          <div className=\"\">Posted by {project.authorFirstName} {project.authorLastName}</div>\n          <div className=\"\">{moment(project.createdAt.toDate()).calendar()}</div>\n          <Link to={\"/\"} className=\"btn\">Back</Link>\n        </div>\n      </div>\n    </div>\n      )\n  }else{\n        return (\n      <div className=\"container-center\"><p>Loading Project... </p></div>\n   \n  );\n      \n  }\n\n\n};\nconst mapStateToProps=(state,ownProps)=>{\n\n        const id = ownProps.match.params.id\n        const projects=state.firestore.data.projects\n        const project= projects?(projects[id]):null\n    return{\n    project:project,\n        auth:state.firebase.auth\n    }\n    \n}\nexport default compose(\nconnect(mapStateToProps),\n    firestoreConnect([\n        {collection:\"projects\"}\n    ])\n\n)(projectDetails)\n","import React,{Component} from \"react\"\nimport {connect} from \"react-redux\"\nimport {signIn} from \"../../store/actions/authActions\"\nimport {Redirect} from \"react-router-dom\"\nclass SignIn extends Component{\n    state={\n        email:\"\",\n        password:\"\"\n        \n    }\n    handleChange=e=>{\n        this.setState({\n            [e.target.id]:e.target.value\n        })\n    }\n    handleSubmit=e=>{\n        e.preventDefault()\n        this.props.signIn(this.state)\n    }\n    render(){\n        const {authError,auth}=this.props\n        if(auth.uid) return <Redirect to=\"/\"/>\n        return(\n              <div className=\"container\">\n        <form   onSubmit={this.handleSubmit} className=\"white\" >\n            \n        <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n            \n            <div className=\"input-field\">\n                <label htmlFor=\"email\">Email</label>\n                    <input onChange={this.handleChange}type=\"email\" id=\"email\" />\n            </div>\n            \n            <div className=\"input-field\">\n                <label htmlFor=\"password\">Password</label>\n                <input onChange={this.handleChange}type=\"password\" id=\"password\" />\n            </div>\n         <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\n            <div className=\"red-text center\">\n            {authError ?<p>{authError}</p>: null}\n            </div>\n            </div>\n        </form>\n      </div>\n        )\n    }\n}\n\nconst mapStateToProps=state=>{\n    return{\n        authError:state.auth.authError,\n        auth:state.firebase.auth\n    }\n}\nconst mapDispatchToProps=dispatch=>{\n    return{\n        signIn:(creds)=>dispatch(signIn(creds))\n    }\n}\nexport default connect(mapStateToProps,mapDispatchToProps)(SignIn)","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { signUp } from \"../../store/actions/authActions\";\nclass SignUp extends Component {\n  state = {\n    email: \"\",\n    password: \"\",\n    firstName: \"\",\n    lastName: \"\"\n  };\n  handleChange = e => {\n    this.setState({\n      [e.target.id]: e.target.value\n    });\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.signUp(this.state);\n  };\n  render() {\n    const { auth,authError } = this.props;\n    if (auth.uid) return <Redirect to=\"/\" />;\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmit} className=\"white\">\n          <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input onChange={this.handleChange} type=\"email\" id=\"email\" />\n          </div>\n\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input onChange={this.handleChange} type=\"password\" id=\"password\" />\n          </div>\n\n          <div className=\"input-field\">\n            <label htmlFor=\"firstName\">First Name</label>\n            <input onChange={this.handleChange} type=\"text\" id=\"firstName\" />\n          </div>\n\n          <div className=\"input-field\">\n            <label htmlFor=\"lastName\">Last Name</label>\n            <input onChange={this.handleChange} type=\"text\" id=\"lastName\" />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\n        <div className=\"red-text center\">\n        {authError?<p>{authError}</p>:null}\n        </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.firebase.auth,\n      authError:state.auth.authError\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    signUp: (newUser) => dispatch(signUp(newUser))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SignUp);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { createProject } from \"../../store/actions/projectActions\";\nimport {Redirect} from \"react-router-dom\"\nclass CreateProject extends Component {\n  state = {\n    title: \"\",\n    content: \"\"\n  };\n  handleChange = e => {\n    this.setState({\n      [e.target.id]: e.target.value\n    });\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.createProject(this.state);\n    this.props.history.push(\"/\");\n  };\n  render() {\n      const {auth}=this.props\n      if(!auth.uid) return <Redirect to=\"signin\"/>\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmit} className=\"white\">\n          <h5 className=\"grey-text text-darken-3\">New Project</h5>\n\n          <div className=\"input-field\">\n            <label htmlFor=\"title\">Title</label>\n            <input onChange={this.handleChange} type=\"text\" id=\"title\" />\n          </div>\n\n          <div className=\"input-field\">\n            <label htmlFor=\"content\">Project Content</label>\n            <textarea\n              onChange={this.handleChange}\n              id=\"content\"\n              className=\"materialize-textarea\"\n            />\n          </div>\n\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps=state=>{\n    return{\n    auth:state.firebase.auth\n}\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n    createProject: project => dispatch(createProject(project))\n  };\n};\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CreateProject);\n","export const createProject = project => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n      const firestore =getFirestore()\n      const profile=getState().firebase.profile\n      const authorId=getState().firebase.auth.uid\n      firestore.collection(\"projects\").add({\n          ...project,\n          authorFirstName:profile.firstName,\n          authorLastName:profile.lastName,\n          authorId:authorId,\n          createdAt:new Date()\n      }).then(()=>{\n          dispatch({ type: \"CREATE_PROJECT\", project: project });\n      }).catch((err)=>{\n          dispatch({type:\"CREATE_PROJECT_ERROR\",err})\n      })\n    \n  };\n};\n","import React, { Component } from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport Navbar from \"./components/layout/Navbar\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport ProjectDetails from \"./components/projects/ProjectDetails\";\nimport SignIn from \"./components/auth/SignIn\"\nimport SignUp from \"./components/auth/SignUp\"\nimport CreateProject from \"./components/projects/CreateProject\"\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div>\n          <Navbar />\n          <Switch>\n            <Route exact path=\"/\" component={Dashboard} />\n            <Route path=\"/project/:id\" component={ProjectDetails} />\n        <Route path=\"/signin\" component={SignIn}/>\n        <Route path=\"/signUp\" component={SignUp}/>\n        <Route path=\"/createproject\" component={CreateProject}/>\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n  authError: null\n};\n\nconst authReducer = (state = initState, action) => {\n  switch (action.type) {\n    case \"LOGIN_ERROR\":\n      console.log(\"login error\");\n      return {\n        ...state,\n        authError: \"Login failed\"\n      };\n    case \"LOGIN_SUCCESS\":\n      console.log(\"login success\");\n      return {\n        authError: null\n      };\n    case \"SIGNOUT_SUCCESS\":\n      console.log(\"signout success\");\n      return state;\n    case \"SIGNUP_SUCCESS\":\n      console.log(\"signup success\");\n      return {\n        ...state,\n        authError: null\n      };\n    case \"SIGNUP_ERROR\":\n      console.log(\"signup error\");\n      return {\n        ...state,\n        authError: action.err.message\n      };\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","const initState = {\n  projects: [\n    { id: \"1\", title: \"title1\", content: \"blah blah\" },\n    { id: \"2\", title: \"title2\", content: \"blah blah\" },\n    { id: \"3\", title: \"title3\", content: \"blah blah\" }\n  ]\n};\n\nconst projectReducer = (state = initState, action) => {\n  switch (action.type) {\n    case \"CREATE_PROJECT\":\n      console.log(\"created project\", action.project);\n      return state;\n      case \"CREATE_PROJECT_ERROR\":\n          console.log(\"create project error\",action.err)\n          return state\n      default:\n          return state\n  }\n};\n\nexport default projectReducer;\n","import authReducer from \"./authReducer\"\nimport projectReducer from \"./projectReducer\"\nimport {combineReducers} from \"redux\"\nimport {firestoreReducer}from\"redux-firestore\"\nimport {firebaseReducer} from \"react-redux-firebase\"\n\nconst rootReducer =combineReducers({\n    auth:authReducer,\n    project:projectReducer,\n    firestore:firestoreReducer,\n    firebase:firebaseReducer\n})\n\nexport default rootReducer","import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nvar config = {\n  apiKey: \"AIzaSyD7wLVokjGlelnu2IW-Rh8JvGgdxRQND1M\",\n  authDomain: \"planner-d58a1.firebaseapp.com\",\n  databaseURL: \"https://planner-d58a1.firebaseio.com\",\n  projectId: \"planner-d58a1\",\n  storageBucket: \"planner-d58a1.appspot.com\",\n  messagingSenderId: \"664204857971\"\n};\nfirebase.initializeApp(config);\n\nfirebase.firestore().settings({ timestampsInSnapshots: true });\n\nexport default firebase;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"./store/reducers/rootReducer\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport { reduxFirestore, getFirestore } from \"redux-firestore\";\nimport { reactReduxFirebase, getFirebase } from \"react-redux-firebase\";\nimport fBconfig from \"./config/fbConfig\";\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(\n      thunk.withExtraArgument({\n        getFirebase,\n        getFirestore\n      })\n    ),\n    reduxFirestore(fBconfig),\n    reactReduxFirebase(fBconfig, {\n      useFirestoreForProfile: true,\n      userProfile: \"users\",\n      attachAuthIsReady: true\n    })\n  )\n);\n\nstore.firebaseAuthIsReady.then(() => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById(\"root\")\n  );\n});\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}